#------Experiments to test (separated with commas)-----

data.experiments=['@COSMOPIPECLNAME@']

#------ Settings for the over-sampling. The first element will always be set to
# 1, for it is the sampling of the cosmological parameters. The other numbers
# describe the over sampling of the nuisance parameter space. This array must
# have the same dimension as the number of blocks in your run (so, 1 for
# cosmological parameters, and then 1 for each experiment with varying nuisance
# parameters).
#data.over_sampling=[1, 4]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list
# main parameters to extract:

data.parameters['omega_cdm']    = [0.11919,   0.01, 0.99, 0.0027,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [3.0753,   1.7, 5., 0.0029,    1, 'cosmo']
data.parameters['omega_b']      = [0.022253,  0.01875, 0.02625, 0.028,  1, 'cosmo']
data.parameters['n_s']          = [0.96229,   0.7, 1.3, 0.0074,    1, 'cosmo']
data.parameters['h']         	= [0.673,     0.64,   0.82,   0.0065, 1, 'cosmo']

# Nuisance parameters:
# m-correction in +-2sigma range:
# 2 z-bins:
#data.parameters['m_corr_z1'] = [-0.01301, -0.03301, 0.00699, 0.02, 1, 'nuisance']
# 3 z-bins:
#data.parameters['m_corr_z1'] = [-0.01368, -0.03368, 0.00632, 0.02, 1, 'nuisance']
# not needed any longer, since correlated with m_corr_z1!
#data.parameters['m_corr_z2'] = [-0.01197, -0.03197, 0.00803, 0.02, 1, 'nuisance']

# amplitude for IA:
data.parameters['A_IA'] = [0.0, -6.0, 6.0, 1.0, 1, 'nuisance']

# amplitude for baryon feedback 'halofit':
#data.parameters['A_bary'] = [0.75, 0.5, 1., 0.5, 1, 'nuisance']

# parameters for baryon feedback 'hmcode':
data.parameters['c_min'] = [3., 2., 3.13, 1., 1, 'cosmo']
#data.parameters['eta_0'] = [0.7, 0.59, 0.81, 1., 1, 'cosmo']

# nuisance parameters for c-correction:
#data.parameters['dc_z1'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
#data.parameters['dc_z2'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
#data.parameters['dc_z3'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
#data.parameters['dc_z4'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
#data.parameters['dc_z5'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']
data.parameters['dc'] = [0., -0.0006, 0.0006, 0.0002, 1, 'nuisance']

#data.parameters['Ac_z1'] = [ 0.01, 0.00, 1.89, 0.63, 1, 'nuisance']
#data.parameters['Ac_z2'] = [ 0.75, 0.00, 1.50, 0.25, 1, 'nuisance']
#data.parameters['Ac_z3'] = [ 1.18, 0.25, 2.11, 0.31, 1, 'nuisance']
#data.parameters['Ac_z4'] = [ 0.77, 0.00, 2.39, 0.54, 1, 'nuisance']
#data.parameters['Ac_z5'] = [ 1.05, 0.00, 2.13, 0.36, 1, 'nuisance']
data.parameters['Ac'] = [ 1.01, 0.62, 1.40, 0.13, 1, 'nuisance']

# DO NOT DELETE THE BELOW! Used for Dz parameter placement in script
###D_Z PARAM HEADER### 
###END D_Z PARAM###

### nuisance parameter for error on m-correction ###
#data.parameters['dm'] = [ 0., -0.01, 0.01, 0.01, 1, 'nuisance']

# Derived parameters

#data.parameters['Omega_Lambda'] = [1, None, None, 0, 1, 'derived']
data.parameters['Omega_m']      = [1, None, None, 0, 1, 'derived']  
data.parameters['sigma8']       = [1, None, None, 0, 1, 'derived']  

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

# fix main cosmology to Planck:
# Table 2 last column (Planck + WP, 68% c.l.) from Planck 2014 (A&A, 571, A16 (2014))
#data.cosmo_arguments['tau_reio'] = 0.089
data.cosmo_arguments['Omega_k'] = 0.

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that these
# three species contribute equally
# to the radiation density at large
# redshift, with a total of Neff=3.046
#data.cosmo_arguments['N_eff'] = 3.046
data.cosmo_arguments['N_eff'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611

# standard BBN prediction of the primordial Helium abundance $Y_p$:
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05
# this writes out all parameters used (also the hidden ones, I hope):
data.cosmo_arguments['write parameters'] = 'yes'
# only needed for regular MCMC:
data.write_step=1

